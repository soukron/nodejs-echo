apiVersion: v1
kind: Template
metadata: {}
parameters:
- name: WEBHOOK_NAME
  required: true
  description: Name of the webhook to deploy (defaults to denynewpods)
  value: denynewpods
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      webhook: ${WEBHOOK_NAME}
    name: ${WEBHOOK_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${WEBHOOK_NAME}:latest
    runPolicy: Serial
    source:
      contextDir: ${WEBHOOK_NAME}/src
      git:
        uri: https://github.com/soukron/openshift-admission-webhooks
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:10
          namespace: openshift
      type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      webhook: ${WEBHOOK_NAME}
    name: ${WEBHOOK_NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/webhooks/${WEBHOOK_NAME}:latest
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: ${WEBHOOK_NAME}-serving-cert
    labels:
      webhook: ${WEBHOOK_NAME}
    name: ${WEBHOOK_NAME}
  spec:
    ports:
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      webhook: ${WEBHOOK_NAME}
      deploymentconfig: ${WEBHOOK_NAME}
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      webhook: ${WEBHOOK_NAME}
    name: ${WEBHOOK_NAME}
  spec:
    replicas: 1
    selector:
      webhook: ${WEBHOOK_NAME}
      deploymentconfig: ${WEBHOOK_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          webhook: ${WEBHOOK_NAME}
          deploymentconfig: ${WEBHOOK_NAME}
      spec:
        containers:
        - image: ${WEBHOOK_NAME}:latest
          imagePullPolicy: Always
          name: ${WEBHOOK_NAME}
          ports:
          - containerPort: 8443
            protocol: TCP
          restartPolicy: Always
          readinessProbe:
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
          volumeMounts:
          - mountPath: /opt/app-root/src/ssl
            name: serving-cert
        volumes:
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: ${WEBHOOK_NAME}-serving-cert
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${WEBHOOK_NAME}
        from:
          kind: ImageStreamTag
          name: ${WEBHOOK_NAME}:latest
      type: ImageChange
